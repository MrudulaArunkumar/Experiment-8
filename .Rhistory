library(tidyverse)
library(plyr)
dir <- setwd("C:/FSU Jena_PhD/Exp8/rawdata/Pilot Hiwi")
#saving all the csv files in that directory into one variable
allOldata <- list.files(path = dir, pattern = "*.csv")
#making the file names into one list
Exp8data <- lapply(allOldata, read_csv)
dir <- setwd("C:/FSU Jena_PhD/Exp8/rawdata/Pilot Hiwi")
#saving all the csv files in that directory into one variable
allOldata <- list.files(path = dir, pattern = "*.csv")
#making the file names into one list
Exp8data <- lapply(allOldata, read_csv)
#using rbind to save it al in on df
#using rbind.fill because some columns do not exist in some datafiles, namely the "preResp.key"
Exp8 <- do.call(rbind.fill,Exp8data)
write.csv(Exp8, file = "Exp8_hiwidataset.csv")
library(tidyverse)
library(plyr)
library(ez)
library(schoRsch)
library(knitr)
library(pander)
library(rmarkdown)
library(reshape2)
library(here)
library(ggpubr)
library(lme4)
library(nlme)
library(lmerTest)
#set_here()
Exp8data <- read.csv(here("Data", "Exp7_fulldataset.csv"))
Exp8data <- read.csv(here("Data", "Exp8_hiwidataset.csv"))
Exp8data$participant <- as.factor(Exp8data$participant)
##exploratory removing participants with average performance
`%notin%` <- Negate(`%in%`)
#removing unnecessary columns
Exp8data <- Exp8data %>%
select(-X,-ConsentKey.keys,-ConsentKey.rt,-Begin.keys,-Begin.rt,-checkresp.corr,-checkresp.keys,-checkresp.rt,-Attention.thisRepN,-Attention.thisTrialN,-Attention.thisN,-Attention.thisIndex,-Attention.ran,-AttnQuestion,-AttnAnswer,-NextStep.keys,-NextStep.rt,-InstRep.ran,-InstRep.thisN,-InstRep.thisTrialN,-InstRep.thisRepN,-InstRep.thisIndex,-PracProceed.keys,-PracProceed.rt,-Prac_loop.thisRepN,-Prac_loop.thisTrialN,-Prac_loop.thisN,-Prac_loop.thisIndex,-Prac_loop.ran,-Exp_proceed.keys,-Exp_proceed.rt,-PracRepeat.ran,-PracRepeat.thisRepN,-PracRepeat.thisN,-PracRepeat.thisIndex,-PracRepeat.thisTrialN,-brkContinue.keys,-PauseResp.keys,-PauseResp.rt,-CALearntrials.thisRepN,-CALearntrials.ran,-CALearntrials.thisTrialN,-CALearntrials.thisIndex, -CA_Proceed.keys,-CA_Proceed.rt,-headstartLearn.thisRepN,-headstartLearn.thisTrialN,-headstartLearn.thisIndex,-headstartLearn.thisN,-headstartLearn.ran,-ExpTrials.ran,-ExpTrials.thisIndex,-CA_trials.thisRepN,-CA_trials.thisN,-CA_trials.thisIndex,-CA_trials.thisTrialN,-CA_trials.ran,-AwareQ_loop.thisRepN,-AwareQ_loop.ran,-AwareQ_loop.thisIndex,-AwareQ_loop.thisTrialN,-todebrief.keys,-Finalend.keys)
#removing unnecessary columns
Exp8data <- Exp8data %>%
select(-X,-ConsentKey.keys,-ConsentKey.rt,-Begin.keys,-Begin.rt,-checkresp.corr,-checkresp.keys,-checkresp.rt,-Attention.thisRepN,-Attention.thisTrialN,-Attention.thisN,-Attention.thisIndex,-Attention.ran,-AttnQuestion,-AttnAnswer,-NextStep.keys,-NextStep.rt,-InstRep.ran,-InstRep.thisN,-InstRep.thisTrialN,-InstRep.thisRepN,-InstRep.thisIndex,-PracProceed.keys,-PracProceed.rt,-Prac_loop.thisRepN,-Prac_loop.thisTrialN,-Prac_loop.thisN,-Prac_loop.thisIndex,-Prac_loop.ran,-Exp_proceed.keys,-Exp_proceed.rt,-PracRepeat.ran,-PracRepeat.thisRepN,-PracRepeat.thisN,-PracRepeat.thisIndex,-PracRepeat.thisTrialN,-brkContinue.keys,-PauseResp.keys,-PauseResp.rt, -CA_Proceed.keys,-CA_Proceed.rt,-headstartLearn.thisRepN,-headstartLearn.thisTrialN,-headstartLearn.thisIndex,-headstartLearn.thisN,-headstartLearn.ran,-ExpTrials.ran,-ExpTrials.thisIndex,-CA_trials.thisRepN,-CA_trials.thisN,-CA_trials.thisIndex,-CA_trials.thisTrialN,-CA_trials.ran,-AwareQ_loop.thisRepN,-AwareQ_loop.ran,-AwareQ_loop.thisIndex,-AwareQ_loop.thisTrialN,-todebrief.keys,-Finalend.keys)
#adjusting RT
Exp8data$mainRT <- Exp8data$TargetResp.rt
Exp8data$Block1RT <- Exp8data$CAResponse.rt
#splitting the RTs from main block
Exp8data <- separate(Exp8data, col = mainRT, into = c("RTm_Trials", "RTm_secondary"), sep = ',')
Exp8data$RTm_Trials <- Exp8data$RTm_Trials%>%
str_replace_all("\\[|\\]","")%>%
as.double(Exp8data$RTm_Trials)
Exp8data$RTm_Trials <- 1000*(Exp8data$RTm_Trials)
#splitting RTs from the Ca learn block (1st block)
Exp8data <- separate(Exp8data, col = Block1RT, into = c("RTb_Trials", "RTb_secondary"), sep = ',')
View(Exp8)
Exp8data <- Exp8data %>%
mutate(BlockCount = ifelse(ExpTrials.thisN <= 104, 1,
ifelse(ExpTrials.thisN <=208 & ExpTrials.thisN > 104,2,
ifelse(ExpTrials.thisN <= 312 & ExpTrials.thisN > 208,3,
ifelse(ExpTrials.thisN <= 415 & ExpTrials.thisN > 312,4,NA)))))
#adjusting RT
Exp8data <- separate(Exp8data, col = TargetResp.rt, into = c("RT_Trials", "RT_secondary"), sep = ',')
Exp8data$RT_Trials <- Exp6data$RT_Trials%>%
str_replace_all("\\[|\\]","")%>%
as.double(Exp6data$RT_Trials)
Exp8data$RT_Trials <- Exp8data$RT_Trials%>%
str_replace_all("\\[|\\]","")%>%
as.double(Exp6data$RT_Trials)
Exp8data$RT_Trials <- Exp8data$RT_Trials%>%
str_replace_all("\\[|\\]","")%>%
as.double(Exp8data$RT_Trials)
Exp8data$RT_Trials <- 1000*(Exp8data$RT_Trials)
###creating a separate df with the contingency awareness
Exp8_CA <- Exp8data%>%
filter(Target == "?" | str_detect(AwareQ, "Press"))
Exp8data <- Exp8data%>%drop_na(RT_Trials)
#combining accuracy from first block and main block
Exp8data$ACC_trials <- Exp8data$TargetResp.corr
Exp8data$ErrorRate <- 1 - Exp8data$ACC_trials
pander(summary(Exp8data$RT_Trials), style = 'rmarkdown',caption = 'Mean RT')
pander(table(Exp8data$ACC_trials),style = 'rmarkdown',caption = "Accuracy")
pander(round(table(Exp8data$ACC_trials)/nrow(Exp8data)*100, digits = 3), style = 'rmarkdown', caption = "Percentage of errors")
Exp8data$RT_Trials[Exp8data$ACC_trials==0] <- NA
#removing outlier error rate participant
Exp8data <- Exp8data%>%
filter(participant != 10)
#creating function to remove the outliers and farouts
computeTukeys <- function(x){
P25 <- quantile(x$RT_Trials, .25, na.rm = TRUE, type = 6) #type = 6 -> used in SPSS
P75 <- quantile(x$RT_Trials, .75, na.rm = TRUE, type = 6)
x$Outlier <- P75 + 1.5*(P75 - P25)
x$Farouts <- P75 + 3.0*(P75 - P25)
return(x)
}
#identifying the outliers and farouts at individual level
Exp8data <- ddply(Exp8data, .(participant), computeTukeys)
#creating new column with RT trials after removing outliers/farouts
Exp8data$RT_ifo <- Exp8data$RT_Trials
Exp8data$RT_io <- Exp8data$RT_Trials
Exp8data$RT_ifo[Exp8data$RT_ifo > Exp8data$Farouts|Exp8data$RT_ifo < 200] <- NA
Exp8data$RT_io[Exp8data$RT_io > Exp8data$Outlier|Exp8data$RT_io < 200] <- NA
pander(summary(Exp8data$RT_ifo), style = 'rmarkdown', caption = "Summary of RT after removing Farouts")
pander(summary(Exp8data$RT_io), style = 'rmarkdown', caption = "Summary of RT after removing Outliers")
Exp8multiple_agg_o <- aggregate(data = Exp8data, RT_io~participant+Validity,subset = (Condition == "MultipleD"),mean)
#for outliers
pander(aggregate(data = Exp8multiple_agg_o, RT_io~Validity,mean), style = "rmarkdown", caption = "Table containing means of valid and invalid learn trials, outliers excluded")
pander((t.test(data = Exp8multiple_agg_o, RT_io~Validity,paired = TRUE)), style = 'rmarkdown', caption = "t test showing differences between valid and invalid trials-excluding outliers")
View(Exp8_CA)
View(Exp8)
View(Exp8data)
View(Exp8)
View(Exp8multiple_agg_o)
View(Exp8_CA)
View(Exp8)
View(Exp8_CA)
View(Exp8)
Exp8data <- Exp8data%>%group_by(participant)%>%fill(participant,.direction = "down")
table(Exp8data$participant)
View(Exp8_CA)
View(Exp8)
Exp8data <- read.csv(here("Data", "Exp8_hiwidataset.csv"))
Exp8data$participant <- as.factor(Exp8data$participant)
table(Exp8data$participant)
Exp8data <- Exp8data%>%group_by(participant)%>%fill(participant,.direction = "down")
table(Exp8data$participant)
table(Exp8data$participant)
Exp8data <- Exp8data%>%group_by(participant)%>%fill(participant,.direction = "down")
table(Exp8data$participant)
View(Exp8_CA)
rm(Exp8)
View(Exp8data)
Exp8data <- Exp8data%>%group_by(participant)%>%fill(participant,.direction = "up")
table(Exp8data$participant)
